<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>thiago&lt;b&gt;ribeiro&lt;/b&gt;</title>
    <description>Experiences, tutorials and code from a Computer Engineering student at University of Pernambuco. 
</description>
    <link>http://tolribeiro.github.io/mywebsite/</link>
    <atom:link href="http://tolribeiro.github.io/mywebsite/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 12 Jan 2015 18:53:27 -0300</pubDate>
    <lastBuildDate>Mon, 12 Jan 2015 18:53:27 -0300</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Simplified DES (SDES): an implementation in C.</title>
        <description>&lt;p&gt;A few months ago, I went through a quite challenging experience as a student of an introdutory class on Criptography: I was required to give a presentation on &lt;strong&gt;DES&lt;/strong&gt; algorithm.&lt;/p&gt;

&lt;p&gt;After going through the titles of the reliable books on the subject, I decided to read &lt;em&gt;Criptography and Network Security&lt;/em&gt; by William Stallings and one of the first sentences on that page got my attention: &lt;em&gt;”[…] the structure of DES and most symmetric ciphers is very complex and cannot be explained as easily […]”.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;Therefore, in the next paragraph, it said that studying a simplified version (SDES) would enhance understanding of DES, and I can guarantee that it actually does. After a couple of hours struggling in the beginning, I got the idea behind one of the most important symmetric ciphers algorithms.    &lt;/p&gt;

&lt;h1 id=&quot;the-implementation-in-c&quot;&gt;The implementation in C&lt;/h1&gt;

&lt;p&gt;Throughout the process of creating the presentation (which I did explaining the DES with a block size of 64 bits), I realized that the SDES would be better to make people understand the step-by-step bits manipulation involved, as well as it would help me to check if my answers on paper were right. As I didn’t find anything useful and “simple” enough for a demonstration,  I decided to do it myself.&lt;/p&gt;

&lt;h1 id=&quot;the-encryption-step&quot;&gt;The encryption step&lt;/h1&gt;

</description>
        <pubDate>Mon, 12 Jan 2015 00:27:00 -0300</pubDate>
        <link>http://tolribeiro.github.io/mywebsite/jekyll/update/2015/01/12/SDES-implementation-in-C.html</link>
        <guid isPermaLink="true">http://tolribeiro.github.io/mywebsite/jekyll/update/2015/01/12/SDES-implementation-in-C.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Digital Modulation: using PSK as example on MATLAB.</title>
        <description>&lt;p&gt;This semester I had some exposure to digital modulation and learned some techniques applied to the studies of Communications Systems, which we’ll put into practice by using the powerful software MATLAB.&lt;/p&gt;

&lt;p&gt;For this tutorial, I’ll pick up the &lt;strong&gt;PSK&lt;/strong&gt; (Phase-Shift Keying). It uses shifts in phase of a signal to represent data. However, if you want and feel comfortable, you can also try it using &lt;em&gt;ASK&lt;/em&gt;, &lt;em&gt;FSK&lt;/em&gt; or &lt;em&gt;QAM&lt;/em&gt;, that along with PSK, form the group of main types of digital modulation widely used in a variety of modern systems, such as cellular networks and so on. &lt;/p&gt;

&lt;p&gt;First, let’s suppose we have a message &lt;em&gt;m(t)&lt;/em&gt;, which is a bit-stream signal, that we want to send through an analog channel. For this example, we consider the frequency of &lt;em&gt;m(t)&lt;/em&gt; as &lt;em&gt;2 Hz&lt;/em&gt;. Therefore, we have:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;n&quot;&gt;f2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                       	&lt;span class=&quot;c&quot;&gt;% m(t) frequency&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;			&lt;span class=&quot;c&quot;&gt;% time definition&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;          &lt;span class=&quot;c&quot;&gt;% message &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                     &lt;span class=&quot;c&quot;&gt;% plotting m(t)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Time&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Amplitude&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Message Signal m(t)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After running this, you should see this image, which represents the message we wanna send: &lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;http://tolribeiro.github.io/mywebsite/downloads/message.png&quot; alt=&quot;Message Signal&quot; title=&quot;Message Signal m(t)&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Now we can write the definition for the carrier &lt;em&gt;x(t)&lt;/em&gt;, a &lt;em&gt;sin()&lt;/em&gt; function with frequency of &lt;em&gt;10 Hz&lt;/em&gt; and amplitude &lt;em&gt;A&lt;/em&gt; of &lt;em&gt;5&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                        &lt;span class=&quot;c&quot;&gt;% amplitude&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                      &lt;span class=&quot;c&quot;&gt;% frequency&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;        &lt;span class=&quot;c&quot;&gt;% carrier function&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                   &lt;span class=&quot;c&quot;&gt;% plotting x(t)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Time&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Amplitude&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Carrier x(t)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we can see the carrier &lt;em&gt;x(t)&lt;/em&gt; we’re gonna use to modulate our message &lt;em&gt;m(t)&lt;/em&gt;:&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;http://tolribeiro.github.io/mywebsite/downloads/carrier.png&quot; alt=&quot;Carrier Signal&quot; title=&quot;Carrier x(t)&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Finally, we can plot the modulated (in phase) signal &lt;em&gt;u(t)&lt;/em&gt; by just multiplying &lt;em&gt;m(t)&lt;/em&gt; by &lt;em&gt;x(t)&lt;/em&gt;. We’re gonna call &lt;em&gt;u(t)&lt;/em&gt; the modulated signal.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-matlab&quot; data-lang=&quot;matlab&quot;&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                      &lt;span class=&quot;c&quot;&gt;% Carrier multiplied by message&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                    &lt;span class=&quot;c&quot;&gt;% Plotting u(t), modulated signal&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Time&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Amplitude&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;PSK Modulated Signal u(t)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which we can see as:&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;
  &lt;p&gt;&lt;img src=&quot;http://tolribeiro.github.io/mywebsite/downloads/modulated.png&quot; alt=&quot;Modulated Signal&quot; title=&quot;PSK Modulated Signal u(t)&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Finally, our message is modulated in &lt;strong&gt;PSK&lt;/strong&gt;, once the phase of the signal does not change while &lt;em&gt;m(t)&lt;/em&gt; is equal to &lt;em&gt;1&lt;/em&gt;, being reversed (changing by 180 degrees) when it goes to &lt;em&gt;0&lt;/em&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Oct 2014 18:53:05 -0300</pubDate>
        <link>http://tolribeiro.github.io/mywebsite/jekyll/update/2014/10/30/digital-modulation-PSK-matlab.html</link>
        <guid isPermaLink="true">http://tolribeiro.github.io/mywebsite/jekyll/update/2014/10/30/digital-modulation-PSK-matlab.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Welcome to my website, powered by Jekyll.</title>
        <description>&lt;p&gt;A couple of years ago, in my first years in college, I had a website just like this one where I would post some information about the creative process of a project that I was working on or even some stuff I thought it would be useful to other people.&lt;/p&gt;

&lt;h1 id=&quot;migrating-from-wordpress&quot;&gt;Migrating from Wordpress&lt;/h1&gt;

&lt;p&gt;Although I was very used to the way Wordpress works, I always felt like it was too much for what I wanted. I needed something faster and straightforward that would help me to create and maintain content as easily as opening my favorite editor and typing my ideas, just like we do when we have that idea and we want to write it down. Fast. Well…I found out about &lt;a href=&quot;http://jekyllrb.com/&quot; target=&quot;_blank&quot;&gt;Jekyll&lt;/a&gt;. and that’s exactly what I was looking for.&lt;/p&gt;

&lt;p&gt;So now, I even feel like I should share more, write more…do more. Join me throughout the process and feel free to contact me. :)&lt;/p&gt;

</description>
        <pubDate>Sun, 21 Sep 2014 18:53:05 -0300</pubDate>
        <link>http://tolribeiro.github.io/mywebsite/jekyll/update/2014/09/21/first-post.html</link>
        <guid isPermaLink="true">http://tolribeiro.github.io/mywebsite/jekyll/update/2014/09/21/first-post.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
